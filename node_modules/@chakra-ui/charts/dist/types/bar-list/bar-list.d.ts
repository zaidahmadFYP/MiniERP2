import type { AbsoluteCenterProps, FlexProps, StackProps, Tokens } from "@chakra-ui/react";
import * as React from "react";
import { type UseChartReturn } from "../use-chart";
export interface BarListData {
    name: string;
    value: number;
    href?: string;
}
interface ChartProps {
    chart: UseChartReturn<BarListData>;
}
export interface BarListRootProps extends StackProps, ChartProps {
    barSize?: Tokens["sizes"];
}
export declare function BarListRoot(props: BarListRootProps): import("react/jsx-runtime").JSX.Element;
export declare const BarListTitle: (props: StackProps) => import("react/jsx-runtime").JSX.Element;
export declare const BarListContent: (props: FlexProps) => import("react/jsx-runtime").JSX.Element;
export interface BarListTooltipProps extends AbsoluteCenterProps {
    payload: BarListData;
    labelFormatter?: (value: number) => React.ReactNode;
}
export declare function BarListTooltip(props: BarListTooltipProps): import("react/jsx-runtime").JSX.Element | null;
export interface BarListBarProps extends StackProps {
    tooltip?: boolean | ((props: BarListTooltipProps) => React.ReactNode);
    label?: (props: {
        payload: BarListData;
        index: number;
    }) => React.ReactNode;
}
export declare function BarListBar(props: BarListBarProps): import("react/jsx-runtime").JSX.Element;
export interface BarListValueProps extends StackProps {
    valueFormatter?: (value: number) => React.ReactNode;
}
export declare function BarListValue(props: BarListValueProps): import("react/jsx-runtime").JSX.Element;
export interface BarListLabelProps extends Omit<StackProps, "title"> {
    title: React.ReactNode;
    titleAlignment?: StackProps["textAlign"];
}
export declare function BarListLabel(props: BarListLabelProps): import("react/jsx-runtime").JSX.Element;
export {};
